---
- name: 3 - Migration
  hosts: localhost
  connection: local
  become: true
  gather_facts: false

  tasks:

    - name: Set global variables
      ansible.builtin.include_vars: "../global-vars.yml"

    - name: Set variables
      ansible.builtin.set_fact:
        target_user: "{{ upgrade.target_user }}"
        work_dir: "{{ upgrade.work_dir }}"
        ocp_url: "{{ target.ocp_url }}"
        ocp_user: "{{ target.ocp_user }}"
        ocp_pwd: "{{ target.ocp_pwd }}"
        ocp_project: "{{ target.ocp_project }}"
        operators_project: "{{ target.operators_project }}"
        openpage_name: "{{ target.openpage_name }}"
        cp4d_user: "{{ openpage_users.cp4d_user }}"

    - name: Set user name
      ansible.builtin.set_fact:
        target_user: "{{ upgrade.target_user }}"

    - name: Set working directory
      ansible.builtin.set_fact:
        work_dir: "{{ upgrade.work_dir }}"

    - name: Load global_config from yaml files in {{ work_dir }}
      ansible.builtin.include_vars:
        dir: "{{ work_dir }}"
        files_matching: '.*\.yaml$'
        depth: 1

    - name: Login to OCP
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          source ~/.zshrc
          oc login -u {{ ocp_user }} -p {{ ocp_pwd }} --server={{ ocp_url }}

    - name: Debug Login
      ansible.builtin.debug:
        var: run_shell_result
      tags: debug_info

    - name: Set project
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          oc project {{ ocp_project }}

    - name: Debug set project
      ansible.builtin.debug:
        var: run_shell_result
      tags: debug_info

    - name: Get Instance Id
      ansible.builtin.include_role:
        name: get_instance_id
      vars:
        get_instance_id_openpage_name: "{{ openpage_name }}"

    - name: Create Role with required permissions
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          oc create role crud-pod-role --verb=get,list,create,update,watch,patch --resource=pod -n {{ operators_project }}
          oc create role crud-pod-exec-role --verb=get,list,create,update,watch,patch --resource=pods/exec -n {{ operators_project }}
          oc create role crud-pod-log-role --verb=get,list,create,update,watch,patch --resource=pods/log -n {{ operators_project }}
          oc create role read-ns --verb=get,list,watch --resource=namespace -n {{ operators_project }}
        run_shell_failed_when: false

    - name: Debug create role
      ansible.builtin.debug:
        var: run_shell_result
      tags: debug_info

    - name: Add role to user
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          oc adm policy add-role-to-user crud-pod-role {{ cp4d_user }} --role-namespace={{ ocp_project }} -n {{ ocp_project }}
          oc adm policy add-role-to-user read-ns {{ cp4d_user }} --role-namespace={{ ocp_project }} -n {{ ocp_project }}
          oc adm policy add-role-to-user crud-pod-exec-role {{ cp4d_user }} --role-namespace={{ ocp_project }} -n {{ ocp_project }}
          oc adm policy add-role-to-user crud-pod-log-role {{ cp4d_user }} --role-namespace={{ ocp_project }} -n {{ ocp_project }}

    - name: Add SCC to user
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          oc adm policy add-scc-to-user privileged {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user rook-ceph-csi {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user restricted  {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user anyuid  {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user restricted-v2  {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user nonroot-v2  {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user nonroot  {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user noobaa-db {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user noobaa-endpoint {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user hostmount-anyuid {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user machine-api-termination-handler {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user hostnetwork-v2 {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user hostnetwork {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user hostaccess {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user zen-ns-c-db2oltp-${instance_id}-scc {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user rook-ceph {{ cp4d_user }} -n {{ ocp_project }}
          oc adm policy add-scc-to-user node-exporter {{ cp4d_user }} -n {{ ocp_project }}

    - name: Stop Application pod
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          oc scale --replicas=0 sts/openpages-{{ openpage_name }}-sts

    - name: Wait for Application to stop
      ansible.builtin.include_role:
        name: wait_shell
      vars:
        wait_shell_command: |
          oc get sts/openpages-{{ openpage_name }}-sts | grep 0/0 | wc -l

    - name: Delete the openpages operator"
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          oc delete subscription.operators.coreos.com/ibm-cpd-openpages-operator clusterserviceversion.operators.coreos.com/ibm-cpd-openpages-operator.v7.2.0 -n {{ ocp_project }}

    - name: Get Provisioner Image Digest
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          skopeo inspect docker://cp.icr.io/cp/cpd/openpages-cpd-provisioner:9.0.0.3.2-61 | jq -r '.Digest'

    - name: Set image variable
      ansible.builtin.set_fact:
        provisioner_image_digest: "{{ run_shell_result.stdout }}"

    - name: Found image
      ansible.builtin.debug:
        var: provisioner_image_digest
      tags: debug_info

    - name: Create upgrade DB script
      ansible.builtin.template:
        src: upgrade_db.j2
        dest: "{{ work_dir }}/openpages_{{ openpage_name }}-upgrade_db.yaml"
        mode: "0755"

    - name: Run upgrade DB script
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          oc apply -f openpages_{{ openpage_name }}-debug-upgrade_db.yaml

    - name: Wait for script to complete
      ansible.builtin.include_role:
        name: wait_shell
      vars:
        wait_shell_command: |
          oc get pod openpages-{{ openpage_name }}-provision-db-debug | grep Completed | wc -l

    - name: Check DB version
      ansible.builtin.include_role:
        name: oc_exec
      vars:
        oc_exec_pod_command: |
          source ~/.bashrc
          db2 connect to ${DBNAME}
          db2 -x "select VERSION from openpage.schemaversion"
        oc_exec_pod: "c-db2oltp-{{ instance_id }}-db2u-0"

    - name: Check result
      ansible.builtin.debug:
        var: oc_exec_result.stdout
      tags: debug_info

    - name: Check result
      ansible.builtin.debug:
        msg: "test: {{ oc_exec_result.stdout is search('OpenPages 9.0.0.3.2 Build 1 2024/08/22') }}"
      tags: debug_info
      failed_when: oc_exec_result.stdout is not search("OpenPages 9.0.0.3.2 Build 1 2024/08/22")

    - name: Start Application pod
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          oc scale --replicas=1 sts/openpages-{{ openpage_name }}-sts

    - name: Wait for Application to start
      ansible.builtin.include_role:
        name: wait_shell
      vars:
        wait_shell_command: |
          oc get sts/openpages-{{ openpage_name }}-sts | grep 1/1 | wc -l

    - name: Create upgrade data script
      ansible.builtin.template:
        src: upgrade_loader_data.j2
        dest: "{{ work_dir }}/openpages_{{ openpage_name }}-upgrade_lodaer_data.yaml"
        mode: "0755"

    - name: Run upgrade data script
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          oc apply -f openpages_{{ openpage_name }}-upgrade_db.yaml

    - name: Wait for script to complete, it can take many hours
      ansible.builtin.include_role:
        name: wait_shell
      vars:
        wait_shell_command: |
          oc get pod openpages-{{ openpage_name }}-provision-data-debug | grep Completed | wc -l

    - name: Create operator script
      ansible.builtin.template:
        src: recreate_operator.j2
        dest: "{{ work_dir }}/recreate_operator.yaml"
        mode: "0755"

    - name: Run operator creation script
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          oc apply -f recreate_operator.yaml

    - name: Check all is fine
      ansible.builtin.include_role:
        name: run_shell
      vars:
        run_shell_command: |
          oc get pod | grep ${openpage_name}
          oc get openpagesinstance ${openpage_name}

    - name: Debug check result
      ansible.builtin.debug:
        var: run_shell_result
      tags: debug_info

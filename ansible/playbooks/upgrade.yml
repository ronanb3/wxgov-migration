---
- name: 3 - Migration
  hosts: localhost
  connection: local
  become: True
  gather_facts: False

  tasks:

  - name: Set global variables
    include_vars: "./global-vars.yml"

  - name: set variables
    set_fact:
      target_user: "{{ upgrade.target_user }}"
      work_dir: "{{ upgrade.work_dir }}"
      ocp_url: "{{ target_ocp.ocp_url }}"
      ocp_user: "{{ target_ocp.ocp_user }}"
      ocp_pwd: "{{ target_ocp.ocp_pwd }}"
      ocp_project: "{{ target_ocp.ocp_project }}"
      operators_project: "{{ target_ocp.operators_project }}"

  # - name: Set user name
  #   set_fact:
  #     target_user: "{{ upgrade.target_user }}"
    
  # - name: Set working directory
  #   set_fact:
  #     work_dir: "{{ upgrade.work_dir }}"
    
  # - name: Load global_config from yaml files in {{ work_dir }}
  #   include_vars:
  #     dir: "{{ work_dir }}"
  #     files_matching: '.*\.yaml$'
  #     depth: 1

  # - name: Display all variables/facts known for a host
  #   debug:
  #     var: hostvars[inventory_hostname]
  #   tags: debug_info

  - name: Test display
    debug:
      var: work_dir
    tags: debug_info

  - name: Login to OCP
    include_role:
      name: run_shell
    vars:
      command: |
        source ~/.zshrc
        oc login -u {{ ocp_user }} -p {{ ocp_pwd }} --server={{ ocp_url }}

  - name: Debug Login
    debug:
      var: run_shell_result
    tags: debug_info

  - name: Set project
    include_role:
      name: run_shell
    vars:
      command: |
        oc project {{ ocp_project }}
  
  - name: Debug set project
    debug:
      var: run_shell_result
    tags: debug_info

  - name: Create Role with required permissions
    include_role:
      name: run_shell
    vars:
      command: |
        oc create role crud-pod-role --verb=get,list,create,update,watch,patch --resource=pod -n {{ operators_project }}
        oc create role crud-pod-exec-role --verb=get,list,create,update,watch,patch --resource=pods/exec -n {{ operators_project }}
        oc create role crud-pod-log-role --verb=get,list,create,update,watch,patch --resource=pods/log -n {{ operators_project }}
        oc create role read-ns --verb=get,list,watch --resource=namespace -n {{ operators_project }}
      p_failed_when: False


  - name: Debug create role
    debug:
      var: run_shell_result
    tags: debug_info

  - name: Add role to user
    include_role:
      name: run_shell
    vars:
      command: |
        oc adm policy add-role-to-user crud-pod-role {{ openpage_users.cp4d_user }} --role-namespace={{ ocp_project }} -n {{ ocp_project }}
        oc adm policy add-role-to-user read-ns {{ openpage_users.cp4d_user }} --role-namespace={{ ocp_project }} -n {{ ocp_project }}
        oc adm policy add-role-to-user crud-pod-exec-role {{ openpage_users.cp4d_user }} --role-namespace={{ ocp_project }} -n {{ ocp_project }}
        oc adm policy add-role-to-user crud-pod-log-role {{ openpage_users.cp4d_user }} --role-namespace={{ ocp_project }} -n {{ ocp_project }}

  - name: Add SCC to user
    include_role:
      name: run_shell
    vars:
      command: |
        oc adm policy add-scc-to-user privileged {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user rook-ceph-csi {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user restricted  {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user anyuid  {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user restricted-v2  {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user nonroot-v2  {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user nonroot  {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user noobaa-db {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user noobaa-endpoint {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user hostmount-anyuid {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user machine-api-termination-handler {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user hostnetwork-v2 {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user hostnetwork {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user hostaccess {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user zen-ns-c-db2oltp-${instance_id}-scc {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user rook-ceph {{ openpage_users.cp4d_user }} -n {{ ocp_project }}
        oc adm policy add-scc-to-user node-exporter {{ openpage_users.cp4d_user }} -n {{ ocp_project }}

  - name : Stop Application pod
    include_role:
      name: run_shell
    vars:
      command: |
        oc scale --replicas=0 sts/openpages-{{ target_instance_id.openpage_name }}-sts
  
  - name: Wait for Application to stop
    include_role:
      name: wait_shell
    vars:
      command: |
        oc get sts/openpages-{{ target_instance_id.openpage_name }}-sts | grep 0/0 | wc -l

  - name: delete the openpages operator"
    include_role:
      name: run_shell
    vars:
      command: |
        oc delete subscription.operators.coreos.com/ibm-cpd-openpages-operator clusterserviceversion.operators.coreos.com/ibm-cpd-openpages-operator.v7.2.0 -n {{ ocp_project }}

  - name : Get Provisioner Image Digest
    include_role:
      name: run_shell
    vars:
      command: |
        skopeo inspect docker://cp.icr.io/cp/cpd/openpages-cpd-provisioner:9.0.0.3.2-61 | jq -r '.Digest'

  - name: Set image variable
    set_fact:
      provisioner_image_digest: "{{ run_shell_result.stdout }}"
      
  - name: Found image
    debug:
      var: provisioner_image_digest
    tags: debug_info

  - name: Create upgrade DB script
    template:
       src: upgrade_db.j2
       dest: "{{ work_dir }}/openpages_{{ target_instance_id.openpage_name }}-upgrade_db.yaml"
       mode: 0755

  - name : Run upgrade DB script
    include_role:
      name: run_shell
    vars:
      command: |
        oc apply -f openpages_{{ target_instance_id.openpage_name }}-debug-upgrade_db.yaml

  - name : Wait for script to complete
    include_role:
      name: wait_shell
    vars:
      command: |
        oc get pod openpages-{{ target_instance_id.openpage_name }}-provision-db-debug | grep Completed | wc -l

  - name : Verify DB Schema
    include_role:
      name: run_shell
    vars:
      command: |
        oc exec -it c-db2oltp-{{ target_instance_id.instance_id }}-db2u-0 -- /bin/bash -c 'source ~/.bashrc ; db2 connect to ${DBNAME} ; db2 "select * from openpage.schemaversion"'
#TODO : add a check

  - name: Debug verify db result
    debug:
      var: run_shell_result
    tags: debug_info

  - name : Start Application pod
    include_role:
      name: run_shell
    vars:
      command: |
        oc scale --replicas=1 sts/openpages-{{ target_instance_id.openpage_name }}-sts
  
  - name: Wait for Application to start
    include_role:
      name: wait_shell
    vars:
      command: |
        oc get sts/openpages-{{ target_instance_id.openpage_name }}-sts | grep 1/1 | wc -l

  - name: Create upgrade data script
    template:
       src: upgrade_loader_data.j2
       dest: "{{ work_dir }}/openpages_{{ target_instance_id.openpage_name }}-upgrade_lodaer_data.yaml"
       mode: 0755

  - name : Run upgrade data script
    include_role:
      name: run_shell
    vars:
      command: |
        oc apply -f openpages_{{ target_instance_id.openpage_name }}-upgrade_db.yaml

  - name : Wait for script to complete, it can take many hours
    include_role:
      name: wait_shell
    vars:
      command: |
        oc get pod openpages-{{ target_instance_id.openpage_name }}-provision-data-debug | grep Completed | wc -l

  - name: Create operator script
    template:
       src: recreate_operator.j2
       dest: "{{ work_dir }}/recreate_operator.yaml"
       mode: 0755

  - name : Run operator creation script
    include_role:
      name: run_shell
    vars:
      command: |
        oc apply -f recreate_operator.yaml

  - name: Check all is fine
    include_role:
      name: run_shell
    vars:
      command: |
        oc get pod | grep ${openpage_name}
        oc get openpagesinstance ${openpage_name}

  - name: Debug check result
    debug:
      var: run_shell_result
    tags: debug_info

